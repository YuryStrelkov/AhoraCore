#version 430

layout(location = 0) out vec4 outColor;

in vec2 mapCoord_FS;

#include TerrainMaterialData;

uniform sampler2D normalMap;

uniform sampler2D heightMap;

const vec3 direction = vec3(0.333,0.333,0.333);

const float intensity = 1.2;

float diffuse(vec3 dir, vec3 n, float i)
{
	return max(0.01, dot(n,dir) * i);
}


vec3 mixColor(float h)
{
 vec3 color1 = texture(materials[0].diffuseMap, mapCoord_FS*(settings[0].channels[0].multRGBA).y).rgb;
 vec3 color2 = texture(materials[1].diffuseMap, mapCoord_FS*(settings[0].channels[0].multRGBA).y).rgb;
 vec3 color3 = texture(materials[2].diffuseMap, mapCoord_FS*(settings[0].channels[0].multRGBA).y).rgb;
 return (color1 * smoothstep(h,0.2,0.0) + 
		 color2 *(smoothstep(h,0.0,0.2) - smoothstep(h,0.5,0.6))+
		 color3 * smoothstep(h,0.5,0.6));
} 

void main()
{
	float height = texture(heightMap, mapCoord_FS).r;
	




    vec3 color = texture(materials[1].diffuseMap, mapCoord_FS*(settings[0].channels[0].multRGBA).y).rgb;

	float diffuse = diffuse(direction, texture(normalMap, mapCoord_FS).rgb, intensity);

	outColor = vec4(mixColor(height),1.0) * diffuse;

}