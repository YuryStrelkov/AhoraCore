#version 430

uniform float Aspect;

layout(points)in;

layout(triangle_strip, max_vertices = 4 )out;

in	vec4 position[];

out vec2 UV;

#include TransformDefinition;

void emitQuad(mat4 transform,vec4 pos,vec2 UV_LU, vec2 UV_RB,vec2 UV_shift, float width, float height)
{
	vec2 LU = UV_LU + UV_shift;
	
	vec2 RD = UV_RB + UV_shift;
	
	float w = width/Aspect/2;
	
	float h = height/2;
	
	UV = vec2(LU.x,LU.y);
	
	gl_Position = transform*(vec4(-w,h,0,0) + pos);
	
	EmitVertex();	
	////
	UV = vec2(LU.x,RD.y);
	
	gl_Position = transform*(vec4(-w,-h,0,0) + pos);
	
	EmitVertex();	
	///
	UV = vec2(RD.x,LU.y);
	
	gl_Position = transform*(vec4(w,h,0,0) + pos);
	
	EmitVertex();	
	///
	UV = vec2(RD.x,RD.y);
	
	gl_Position = transform*(vec4(w,-h,0,0) + pos);
	
	EmitVertex();	

	EndPrimitive();
}


void main()
{
	mat4 transform = worldTransform*parentTransform;

	emitQuad( transform, position[0], vec2(0,0), vec2(1,1), vec2(0,0), 0.25, 0.25);
}