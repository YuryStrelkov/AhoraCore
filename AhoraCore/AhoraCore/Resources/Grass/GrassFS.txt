#version 330

layout(location = 0) out vec4 outColor;

#include CameraDefinition; ///10

in vec2 uvCoord;

in vec3 normal;

in vec3 position_FS;

const float zFar = 10000;

const float zNear = 0.1;

const float sightRange = 0.6;

float fogFactor(float dist)
{
	return -0.0002/sightRange*(dist-zFar/10*sightRange) + 1;
}

 
const vec3 fogColor = vec3(0.65,0.85,0.9);


const vec3 direction = vec3(0.333,0.333,0.333);

const float intensity = 1.2;

uniform sampler2D grassMap;

float diffuse(vec3 dir, vec3 n, float i)
{
	return max(0.2, dot(n,dir) * i);
}

void main()
{
	vec4 color = texture(grassMap,uvCoord);
	if(color.a < 0.02)
	{
	discard;
	}


	float diffuse = diffuse(direction, normal, intensity);

	float dist = length(cameraPosition.xyz - position_FS);

	float fog = fogFactor(dist);
	
	outColor = vec4(mix(color.rgb*diffuse, fogColor,1-clamp(fog,0,1)),color.a);
 
}