#version 330

layout(location = 0)in vec3 p_position;
layout(location = 1)in vec2 p_uv;
layout(location = 2)in vec3 p_normal;

#include CameraDefinition;

#include TransformDefinition;

uniform mat4 LocTransMatrix;

uniform sampler2D heightMap;

uniform  float ScaleY;

uniform  float ScaleXZ;

uniform  int lod;

uniform  float gap;

out vec2 uvCoord;

out vec3 normal;


void main()
{	
	uvCoord = p_uv;
	
	normal = p_normal.xzy;

	
    vec4 localPos = LocTransMatrix*vec4(p_position.xzy, 1);
	
	float verticalShift = texture(heightMap,localPos.xz).r;
	
	localPos.y=localPos.y*0.05 + verticalShift;

	gl_Position = projectionMatrix * viewMatrix *worldTransform*(localPos);
}