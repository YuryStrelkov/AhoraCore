layout(std140, row_major) uniform CameraData
{
	mat4 viewMatrix;
	mat4 projectionMatrix;
	vec4 [6] frustumPlanes;
	vec4 cameraPosition;
	vec4 cameraLookAt;
};

bool clipInCameraSpace( vec4 point)
{
        for (   int i = 0; i < 6; i++)
            {
                if (frustumPlanes[i].x * point.x + frustumPlanes[i].y * point.y + frustumPlanes[i].z * point.z + frustumPlanes[i].w <= 0)
                {
                    return false;
                }
            }
            return true;
 }

 bool clipInCameraSpace( vec4 point, float r)
{
        for (   int i = 0; i < 6; i++)
            {
                if (frustumPlanes[i].x * point.x + frustumPlanes[i].y * point.y + frustumPlanes[i].z * point.z + frustumPlanes[i].w <= r)
                {
                    return false;
                }
            }
            return true;
 }

 