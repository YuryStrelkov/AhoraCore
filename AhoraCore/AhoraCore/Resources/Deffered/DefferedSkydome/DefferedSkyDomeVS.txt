#version 330

layout (location = 0) in vec3 p_position;
layout (location = 1) in vec2 p_texcoord;
layout (location = 2) in vec3 p_normal;

#include CameraDefinition;

#include TransformDefinition;
 
out vec2 v_TexCoord;

out vec3 v_normal;

out vec4 v_position;

out vec3 skyColor;
 
uniform vec4 DomeColor;
 
vec3 atmosphereDescend(vec3 position, vec4 atm_color)
{
return vec3(-0.00022*(position.y-2000)+ atm_color.x,
			-0.00025*(position.y-2000)+ atm_color.y,
			-0.00019*(position.y-2000)+ atm_color.z);
} 
 
void  main()
{	 
	mat4 transformationMatrix = worldTransform*localTransform;
 
	vec4 pos = vec4(p_position,1);
 
    pos        =   transformationMatrix *pos;
	
    v_TexCoord        =    p_texcoord;
	
 	v_normal          =    normalize(mat3(viewMatrix*transformationMatrix)*p_normal);

	skyColor          =    atmosphereDescend(pos.xyz, DomeColor);
	
	v_position        =    viewMatrix*pos;
	
	gl_Position       =    projectionMatrix*v_position;
}